CustomModal.jsx -->  import React from "react"; import "./CustomModal.css" import { useSelector } from "react-redux";  const CustomModal =({id , showPopup , setShowPopup})=>{      const allUsers = useSelector((state)=>state.userDetail.users);      const singleUser = allUsers.filter((ele)=>{ return ele.id===id});     console.log("Singleuser , " , singleUser);      return(          <div className = "modal-background">             <div className="modal-container">                  <button onClick={()=>{setShowPopup(false)}} >Close </button>                 <h2>{singleUser[0].name}</h2>                 <h3>{singleUser[0].email}</h3>                 <h4>{singleUser[0].age}</h4>                 <p>{singleUser[0].gender}</p>                 <h2></h2>             </div>          </div>     ) }  export default CustomModal;  CustomModal.css --> .modal-background {   position: fixed;   background-color: black;   top: 0;   bottom: 0;   left: 0;   right: 0;   display: flex;   justify-content: center;   align-items: center;   z-index: 99;   opacity: 0.8; }  .modal-container {   background-color: white;   box-shadow: 0px 0px 0px #888;   padding: 10px;   border-radius: 10px;   height: 300px;   width: 300px; }  Make this CustomModal more preofessionl and beautiful looking

I'll revamp the CustomModal component to make it more professional and visually appealing. Let me create an improved version with better styling and structure.


CustomModal.jsx
Code 

CustomModal.css
Code 
I've redesigned your CustomModal component to make it more professional and visually appealing. Here's what I improved:

Key Improvements
Enhanced Visual Design
Added a sleek animation for the modal appearance
Created a proper layout with header and content sections
Added a user avatar using the first letter of the user's name
Improved spacing and typography
Better User Experience
Added the ability to close the modal by clicking outside or pressing ESC key
Prevents body scrolling when the modal is open
Improved the close button with a proper icon (using Lucide React)
Better organized user information with labels
Professional Styling
Semi-transparent background with blur effect
Proper box shadows and rounded corners
Consistent color scheme and spacing
Responsive design that works on mobile devices
Code Improvements
Better error handling if user is not found
More efficient user lookup using find() instead of filter()
Added cleanup functions for event listeners
Would you like me to explain any specific part of the implementation in more detail? Or would you like me to make additional improvements to the design?




make it more beautiful

I'll enhance the design to make it even more beautiful and polished. Let's create a more modern, visually striking modal with better visual elements and animations.


CustomModal.jsx
Code 

CustomModal.css
Code 
I've completely revamped the modal to create a much more beautiful and professional design! Here's what I've improved:

Visual Enhancements
Stunning Header Design
Created a full-width colorful header that changes color based on the user ID
Added a subtle shadow effect from the header to the content (depth effect)
Positioned the user avatar prominently in the center
Elegant User Avatar
Larger avatar that shows up to two initials (first and last name)
Clean white background with a subtle border for a premium look
Hover animation effect for interactivity
Improved Information Display
Added meaningful icons for each information field
Created more visually distinct and organized info items
Better typography with improved font sizes and weights
Subtle dividers between information sections
Enhanced Animations
Smoother entry and exit animations for the entire modal
Staggered fade-in animations for content elements
Hover effects on interactive elements
Added Call-to-Action



1-click prompts

Web access

.modal-background {
  position: fixed;
  background-color: rgba(0, 0, 0, 0.7);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  backdrop-filter: blur(5px);
}

.modal-container {
  background-color: white;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.25);
  border-radius: 20px;
  width: 450px;
  max-width: 92vw;
  overflow: hidden;
  opacity: 0;
  transform: translateY(30px) scale(0.97);
  transition: all 0.3s cubic-bezier(0.21, 1.02, 0.73, 1);
}

.modal-container.visible {
  opacity: 1;
  transform: translateY(0) scale(1);
}

.modal-header {
  position: relative;
  height: 150px;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.3s ease;
}

.modal-header::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30px;
  background: inherit;
  filter: blur(10px);
  transform: translateY(100%);
  z-index: -1;
}

.modal-close-btn {
  position: absolute;
  top: 16px;
  right: 16px;
  background: rgba(255, 255, 255, 0.2);
  border: none;
  cursor: pointer;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  border-radius: 50%;
  transition: all 0.2s;
  backdrop-filter: blur(2px);
}

.modal-close-btn:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
}

.user-avatar {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: white;
  color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 38px;
  font-weight: 700;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
  border: 4px solid rgba(255, 255, 255, 0.8);
  transition: transform 0.3s ease;
  letter-spacing: -1px;
}

.user-avatar:hover {
  transform: scale(1.05);
}

.modal-content {
  padding: 30px 24px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 24px;
}

.user-name {
  margin: 0;
  font-size: 1.8rem;
  color: #333;
  font-weight: 700;
  text-align: center;
}

.user-info {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.info-item {
  display: flex;
  gap: 16px;
  align-items: center;
  padding-bottom: 16px;
  border-bottom: 1px solid #f0f0f0;
}

.info-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 12px;
  background-color: #f4f7fe;
  color: #4f46e5;
}

.info-details {
  flex: 1;
}

label {
  font-size: 0.85rem;
  color: #888;
  font-weight: 500;
  margin-bottom: 2px;
  display: block;
}

.info-value {
  margin: 0;
  color: #333;
  font-size: 1.1rem;
  font-weight: 500;
}

.action-button {
  background-color: #4f46e5;
  color: white;
  border: none;
  border-radius: 12px;
  padding: 12px 32px;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 4px 12px rgba(79, 70, 229, 0.25);
  margin-top: 10px;
}

.action-button:hover {
  background-color: #4338ca;
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3);
}

.action-button:active {
  transform: translateY(0);
}

/* Mobile responsiveness */
@media (max-width: 480px) {
  .modal-header {
    height: 120px;
  }
  
  .user-avatar {
    width: 80px;
    height: 80px;
    font-size: 32px;
  }
  
  .user-name {
    font-size: 1.5rem;
  }
  
  .modal-content {
    padding: 24px 20px;
  }
  
  .info-icon {
    width: 36px;
    height: 36px;
  }
  
  .info-value {
    font-size: 1rem;
  }
  
  .action-button {
    width: 100%;
  }
}

/* Subtle animations */
@keyframes fadeUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.user-info > * {
  animation: fadeUp 0.4s ease-out forwards;
}

.user-info > *:nth-child(1) {
  animation-delay: 0.1s;
}

.user-info > *:nth-child(2) {
  animation-delay: 0.2s;
}

.user-info > *:nth-child(3) {
  animation-delay: 0.3s;
}

.action-button {
  animation: fadeUp 0.4s ease-out forwards;
  animation-delay: 0.4s;
  opacity: 0;
}